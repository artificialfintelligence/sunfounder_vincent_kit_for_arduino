# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Vincent
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Vincent Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 14:14+0800\n"
"PO-Revision-Date: 2021-05-29 07:05+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../1.3_analog_write.rst:2
msgid "1.3 Analog Write"
msgstr "1.3 Analoges Schreiben"

#: ../1.3_analog_write.rst:5
msgid "Overview"
msgstr "Überblick"

#: ../1.3_analog_write.rst:7
msgid ""
"You can write the PWM wave to the pin by using analogWrite(). This method"
" can be used to adjust the brightness of LED, change the color of RGB, or"
" adjust the motor speed, etc. Here we will take LED as an example to get "
"gradient brightness of LED."
msgstr ""
"Sie können die PWM-Welle mit analogWrite () auf den Pin schreiben. Diese "
"Methode kann verwendet werden, um die Helligkeit der LED anzupassen, die "
"Farbe von RGB zu ändern oder die Motordrehzahl usw. anzupassen. Hier "
"nehmen wir LED als Beispiel, um die Gradientenhelligkeit der LED zu "
"erhalten."

#: ../1.3_analog_write.rst:13
msgid "Components Required"
msgstr "Erforderliche Komponenten"

#: ../1.3_analog_write.rst:19
msgid "※ Pulse Width Modulation"
msgstr "※ Pulsweitenmodulation"

#: ../1.3_analog_write.rst:21
msgid ""
"Pulse Width Modulation, or PWM, is a technique for getting analog results"
" with digital means. Digital control is used to create a square wave, a "
"signal switched between on and off. This on-off pattern can simulate "
"voltages in between full on (5 Volts) and off (0 Volts) by changing the "
"portion of the time the signal spends on versus the time that the signal "
"spends off. The duration of \"on time\" is called the pulse width. To get"
" varying analog values, you change, or modulate, that pulse width. If you"
" repeat this on-off pattem fast enough with an LED for example, the "
"result is as if the signal is a steady voltage between 0 and 5v "
"controlling the brightness of the LED."
msgstr "Die Pulsweitenmodulation PWM ist eine Technik, mit der analoge Ergebnisse mit digitalen Mitteln erzielt werden können. Die digitale Steuerung wird verwendet, um eine Rechteckwelle zu erzeugen, ein Signal, das zwischen Ein und Aus geschaltet wird. Durch Ändern des Verhältnisses von Signaleinschaltzeit zu Signalausschaltzeit kann dieser Schaltmodus die Spannung zwischen vollständig geöffnet (5 Volt) und Aus (0 Volt) simulieren. Die Dauer von \"Einschaltzeit\" wird als Impulsbreite bezeichnet. Um unterschiedliche Analogwerte zu erhalten, ändern oder modulieren Sie diese Impulsbreite. Wenn Sie dieses Schaltmuster beispielsweise mit einer LED schnell genug wiederholen, ist das Ergebnis so, als ob das Signal eine stabile Spannung zwischen 0 und 5 V ist, die die Helligkeit der LED steuert."

#: ../1.3_analog_write.rst:31
#, python-format
msgid ""
"A call to analogWrite() is on a scale of 0 - 255, such that "
"analogWrite(255) requests a 100% duty cycle (always on), and "
"analogWrite(127) is a 50% duty cycle (on half the time) for example."
msgstr "Der Bereich für den Aufruf von analogWrite() liegt zwischen 0 und 255. Beispielsweise erfordert analogWrite(255)  ein Tastverhältnis von 100% (immer eingeschaltet), während analogWrite(127) ein Tastverhältnis von 50% (halbe Zeite eingeschaltet) ist"

#: ../1.3_analog_write.rst:38
msgid "Fritzing Circuit"
msgstr "Fritzing Circuit"

#: ../1.3_analog_write.rst:40
msgid ""
"In this example, we use the PWM pin 9 to drive the LED. Connect one end "
"of the resistor to pin 9. Connect the long pin (anode) of the LED to the "
"other end of the resistor. Connect the short pin (negative, referred to "
"as the cathode) of LED to GND."
msgstr ""
"In diesem Beispiel verwenden wir den PWM-Pin 9, um die LED anzusteuern. "
"Verbinden Sie ein Ende des Widerstands mit Pin 9. Verbinden Sie den "
"langen Pin (Anode) der LED mit dem anderen Ende des Widerstands. "
"Verbinden Sie den kurzen Pin (negativ, als Kathode bezeichnet) der LED "
"mit GND."

#: ../1.3_analog_write.rst:46
msgid "PWM pins of Mega2560 board are 2 -13, 44 - 46."
msgstr "HINWEIS: Die PWM-Pins der Mega2560-Karte sind 2 - 13, 44 - 46."

#: ../1.3_analog_write.rst:52
msgid "Schematic Diagram"
msgstr "Schematische Darstellung"

#: ../1.3_analog_write.rst:58
msgid "Code"
msgstr "Code"

#: ../1.3_analog_write.rst:64
msgid ""
"After uploading the code to the Mega2560 board, you can see that the LED "
"gradually brightens out and turns off gradually."
msgstr ""
"Nach dem Hochladen des Codes auf die Mega2560-Karte können Sie sehen, "
"dass die LED allmählich aufhellt und sich allmählich erlischt."

#: ../1.3_analog_write.rst:68
msgid "Code Analysis"
msgstr "Code-Analyse"

#: ../1.3_analog_write.rst:70
msgid "Declare pin 9 as ledPin."
msgstr "Deklarieren Sie Pin 9 als LEDPin."

#: ../1.3_analog_write.rst:76
msgid ""
"analogWrite() in loop() assigns ledPin an analog value (PWM wave) between"
" 0 and 255 to change the brightness of LED."
msgstr ""
"analogWrite () in loop () weist ledPin einen analogen Wert (PWM-Welle) "
"zwischen 0 und 255 zu, um die Helligkeit der LED zu ändern."

#: ../1.3_analog_write.rst:82
msgid ""
"Using a for loop, the value of analogWrite() can be changed step by step "
"between the minimum value (0) and the maximum value (255)."
msgstr ""
"Mit einer for-Schleife kann der Wert von analogWrite () schrittweise "
"zwischen dem Minimalwert (0) und dem Maximalwert (255) geändert werden."

#: ../1.3_analog_write.rst:90
msgid ""
"In order to see the experimental phenomenon clearly, a delay(30) needs to"
" be added to the for cycle to control the brightness change time."
msgstr ""
"Um das experimentelle Phänomen klar zu sehen, muss dem for-Zyklus eine "
"Verzögerung (30) hinzugefügt werden, um die Helligkeitsänderungszeit zu "
"steuern."

#: ../1.3_analog_write.rst:102
msgid "Phenomenon Picture"
msgstr "Phänomen Bild"

